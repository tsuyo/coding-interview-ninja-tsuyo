public class Solution {
  
  // If there is the majority element, there is some range [i,j] in arr[],
  // arr[i] == <majority element> and fills more than 50% of this range with
  // the majority element
  int majority(int[] arr) {
    // if not found, return Integer.MIN_VALUE
    if (arr == null || arr.length == 0) return Integer.MIN_VALUE;
    int cand = arr[0];
    int count = 1;
    // first find a candicate
    for (int i = 1; i < arr.length; i++) {
      if (arr[i] == cand) {
        count++;
      } else {
        count--;
      }
      if (count == 0) {
        cand = arr[i];
        count = 1;
      }
    }
    // next check if the cand is indeed a solution
    count = 0;
    for (int i = 0; i < arr.length; i++) {
      if (arr[i] == cand) count++;
    }
    return (count * 2 > arr.length) ? cand : Integer.MIN_VALUE;
  }

  public static void main(String[] args) {
    int ans = new Solution().majority(new int[] {3,2,2,1,2,2,1});
    System.out.println(ans);
  }

}
